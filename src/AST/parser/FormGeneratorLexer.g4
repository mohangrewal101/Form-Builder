lexer grammar FormGeneratorLexer;


// Containers & Separators
OBJECT_START: '{';
OBJECT_END: '}';
LIST_START: '[';
LIST_END: ']';
SEP: ',';
COLON: ':';
PAREN_START: '(';
PAREN_END: ')';
//START_COMMENT: '// ~[\r\n]*' -> skip;

/** Start Code Generated by Copilot on Jan 30, 2024 */
STRING: '"' (~["\\] | '\\' .)* '"';
NUM: '-'? [0-9]+ ('.' [0-9]+)?;
REGEX: '$' (~[/\\] | '\\' .)* '$';
/** End Code Generated by Copilot on Jan 30, 2024 */

//Object keys
PAGES_KEY: 'pages';
FUNCTIONS_KEY: 'functions';
QUESTIONS_KEY: 'questions';
ID_KEY: 'id';
HEADER_KEY: 'header';
GOTO_KEY: 'goTo';
VARIABLES_KEY: 'vars';
INSTRUCTIONS_KEY: 'instructions';
DISPLAY_QUESTIONS_KEY: 'displayQuestions';
TYPE_KEY: 'type';
LABEL_KEY: 'label';
OPTIONS_KEY: 'options';
DEPENDS_ON_KEY: 'dependsOn';
DISPLAY_IF_KEY: 'displayIf';
LOOP_KEY: 'loop';
IS_REQUIRED_KEY: 'isRequired';
CORRECT_ANSWER_KEY: 'correctAnswer';
DISPLAY_ALL: 'all';

// Question Types
TEXT_INPUT: 'textInput';
RADIO: 'radio';
CHECKBOX: 'checkbox';
DROPDOWN: 'dropdown';

// functions
RETURN: 'return';

// Conditional statements
IF_KEY: 'if';
ELSE_KEY: 'else';

// Static objects
FORM_OBJ_KEY: 'Form';
DOT: '.';
FORM_STATE_KEY: 'FormState';
STATIC_FORM_NAME: 'getRandomInt' | 'getRandom' | 'round' ; // TODO: Define these in docs

// Boolean  
TRUE: 'true';
FALSE: 'false';


// Math Operators
PLUS: '+';
MINUS: '-';
MULTIPLY: '*';
DIVIDE: '/';
MODULO: '%';

// Equality Operators
EQUAL: '==';
NOT_EQUAL: '!=';
GREATER: '>';
LESS: '<';
GREATER_EQUAL: '>=';
LESS_EQUAL: '<=';

VARIABLE_NAME: [A-Za-z0-9]+;

//Other keywords
LOOP_INDEX: 'loopIndex';


WS: [ \t\n\r]+ -> skip;

//mode COMMENT_MODE;
//COMMENT_CONTENT: ~[\r\n]*; // Match any characters except newline
//NEWLINE: '\r'? '\n' -> mode(DEFAULT_MODE); // Exit COMMENT_MODE on newline

